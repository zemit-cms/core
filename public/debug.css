:root {
    --bg-main: #ffffff;
    --bg-panel: #ffffff;
    --bg-alt: #f5f5f5;
    --bg-code: #0a0a0a;
    --text-main: #000000;
    --text-dim: #555555;
    --text-invert: #ffffff;
    --border: #000000;
    --border-light: #d0d0d0;
    --mono: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace;
    --sans: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
}

/* base layout */
html, body {
    margin: 0;
    padding: 0;
    background: var(--bg-main);
    color: var(--text-main);
    font-family: var(--sans);
    font-size: 15px;
    line-height: 1.4;
    display: flex;
    flex-direction: column;
    align-items: center;
    scroll-behavior: smooth;
    overflow-anchor: none;
}

/* global selection highlight for normal/light areas */
::selection {
    background: black;
    color: white;
}

::-moz-selection {
    background: black;
    color: white;
}

/* headings, links */
h1 {
    margin: 0 0 0.5rem 0;
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--text-main);
    border-bottom: 1px solid var(--border);
    padding-bottom: 6px;
}

a {
    color: var(--text-main);
    text-decoration: underline;
}

a:hover {
    text-decoration: none;
}

/* main panels */
.error-main,
.error-info {
    width: 100%;
    max-width: 980px;
    box-sizing: border-box;
}

.error-main {
    background: var(--bg-panel);
    margin: 2rem auto 0 auto;
    border: 1px solid var(--border);
    border-bottom: none;
    padding: 16px 20px;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
}

.error-main .error-file {
    font-family: var(--mono);
    font-size: .8rem;
    color: var(--text-dim);
    display: block;
    margin-top: 0.5rem;
    word-break: break-all;
    opacity: 0.8;
}

/* tabs container */
.error-info {
    background: var(--bg-panel);
    margin: 0 auto 2rem auto;
    border: 1px solid var(--border);
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
}

/* tab bar (phalcon original markup) */
#tabs {
    border-bottom: 1px solid var(--border);
    background: var(--bg-panel);
}

#tabs > ul {
    padding: 0;
    margin: 0;
    list-style: none;
    display: flex;
    justify-content: center; /* center the group */
    border-bottom: 1px solid var(--border);
    flex-wrap: nowrap;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
}

#tabs > ul::-webkit-scrollbar {
    height: 6px;
}

#tabs > ul::-webkit-scrollbar-track {
    background: black;
}

#tabs > ul::-webkit-scrollbar-thumb {
    background: white;
}

#tabs > ul > li {
    flex: 1 1 auto; /* each tab tries to share width */
    min-width: 120px; /* don't get too skinny on overflow */
    text-align: center;
    border-right: 1px solid var(--border);
    background: var(--bg-panel);
    font-size: .8rem;
}

#tabs > ul > li:first-child {
    border-left: 0;
}

#tabs > ul > li:last-child {
    border-right: 0;
}

#tabs > ul > li > a {
    display: block;
    color: var(--text-main);
    text-decoration: none;
    padding: 10px 0;
    user-select: none;
    white-space: nowrap;
}

#tabs > ul > li > a:hover {
    background: var(--bg-alt);
}

#tabs > ul > li.active > a {
    background: var(--text-main);
    color: var(--text-invert);
}

/* tab panels (the content areas like #error-tabs-1,2,3,etc.) */
#tabs > div[id^="error-tabs-"] {
    display: none;
    padding: 16px 20px;
    font-size: .85rem;
    line-height: 1.4;
    background: var(--bg-panel);

    /* prevent content overflow issues */
    overflow-x: auto;
    overflow-y: visible;
    box-sizing: border-box;
    max-width: 100%;
    word-wrap: break-word;
    overflow-wrap: break-word;
}

#tabs > div.active {
    display: block;
}

/* tables in Request/Server/etc */
.superglobal-detail {
    width: 100%;
    border-collapse: collapse;
    font-size: .8rem;
    table-layout: fixed;
    word-break: break-word;
}

.superglobal-detail th {
    text-align: left;
    background: #eee;
    border: 1px solid var(--border-light);
    font-weight: 600;
    padding: 6px 8px;
    white-space: nowrap;
    color: black;
}

.superglobal-detail td {
    vertical-align: top;
    border: 1px solid var(--border-light);
    padding: 6px 8px;
    background: white;
    word-break: break-word;
    color: black;
}

.superglobal-detail .key {
    font-weight: 600;
    width: 200px;
}

/* backtrace table */
#error-tabs-1 table {
    width: 100%;
    border-collapse: collapse;
    font-size: .8rem;
    table-layout: fixed;
    word-break: break-word;
}

#error-tabs-1 table td {
    border-top: 1px solid var(--border-light);
    padding: 8px 0 8px 0;
    vertical-align: top;
    text-align: left;
    color: black;
    word-break: break-word;
}

#error-tabs-1 td > pre.prettyprint {
    margin: 12px 0 0 0;
}

#error-tabs-1 td {
    padding-bottom: 0;
}

.error-number {
    width: 40px;
    color: var(--text-dim);
    font-family: var(--mono);
    font-size: .75rem;
    padding-right: 8px;
}

.error-class,
.error-function {
    font-weight: 600;
    color: var(--text-main);
}

.error-file {
    color: var(--text-dim);
    font-family: var(--mono);
    font-size: .75rem;
    margin-top: 4px;
    word-break: break-all;
}

/* CODE BLOCKS
   We are now going to let JS rewrite <pre.prettyprint> into structured lines.
   Visual goals:
   - Black background overall
   - Each line is a block flex row: [line number][code]
   - Highlighted lines: white bg + black text
   - Normal lines: black bg + white text
   - Scrolling to highlighted line lands with it a bit down, not glued to the top
*/
pre.prettyprint {
    background: var(--bg-code); /* black block */
    color: var(--text-invert); /* white text by default */
    border: 1px solid var(--border);
    font-family: var(--mono);
    font-size: .75rem;
    line-height: 1.4;
    padding: 12px 16px;
    margin: 12px 0 0 0;
    white-space: pre;
    overflow-x: auto;
    overflow-y: auto;
    max-height: 220px;
    tab-size: 4;
    box-sizing: border-box;
    position: relative;
}

/* scrollbar for code block:
   white track, black thumb */
pre.prettyprint::-webkit-scrollbar {
    width: 6px;
    height: 6px;
}

pre.prettyprint::-webkit-scrollbar-track {
    background: black;
}

pre.prettyprint::-webkit-scrollbar-thumb {
    background: white;
}

/* compact fragment indicator */
pre.prettyprint .code-ellipsis {
    display: block;
    text-align: center;
    color: #888;
    background: black;
    font-style: italic;
    letter-spacing: 2px;
    user-select: none;
}

/* code line styling (same as before) */
pre.prettyprint .code-line {
    display: block;
    white-space: pre;
    color: white;
    background: black;
    scroll-margin-top: 40px;
}

/* highlighted line */
pre.prettyprint .code-line.hl {
    /*background: white;*/
    /*color: black;*/
}


/* page/global scrollbar:
   black track, white thumb */
body::-webkit-scrollbar {
    width: 8px;
}

body::-webkit-scrollbar-track {
    background: white;
}

body::-webkit-scrollbar-thumb {
    background: black;
}

/* lines that JS will inject */
pre.prettyprint .code-line {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    white-space: pre;
    /*color: white;*/
    /*background: black;*/
    scroll-margin-top: 40px; /* so when we scrollTo() highlight it's not glued to top edge */
}

/* line number cell */
pre.prettyprint .ln {
    display: inline-block;
    width: 3em;
    min-width: 3em;
    text-align: right;
    padding-right: 1em;
    color: #777;
    user-select: none;
    flex-shrink: 0;
}

/* highlighted line override:
   full white bar, black text */
pre.prettyprint .code-line.hl {
    background: #4f4f4f;
}

pre.prettyprint .code-line.hl .ln {
    color: black;
}

/* selection inside code (dark zone logic override):
   when user drags to select text in code, invert */
pre.prettyprint ::selection {
    background: white;
    color: black;
}

pre.prettyprint ::-moz-selection {
    background: white;
    color: black;
}

/* highlight spans/mark INSIDE code = black text on white chip */
pre.prettyprint mark,
pre.prettyprint .highlight {
    background: white;
    color: black;
    padding: 0 2px;
}

/* highlight spans/mark in normal/light panels = white text on black chip */
body :not(pre) mark {
    background: black;
    color: white;
    padding: 0 2px;
}

/* fixed version footer (bottom-right, always visible) */
.version {
    position: fixed;
    bottom: 12px;
    right: 12px;
    font-family: var(--mono);
    font-size: 0.8rem;
    color: var(--text-dim);
    background: var(--bg-panel);
    border: 1px solid var(--border-light);
    padding: 3px 6px;
    line-height: 1.3;
    z-index: 100;
    opacity: 0.9;
    white-space: nowrap;
}

.version a {
    text-decoration: none;
    color: var(--text-main);
}

.version a:hover {
    text-decoration: underline;
}

/* no rounding anywhere, ever */
* {
    border-radius: 0 !important;
}

.expand-toggle {
    display: block;
    margin: 4px 0 12px auto;
    padding: 4px 8px;
    font-size: 0.75rem;
    font-family: var(--mono);
    background: black;
    color: white;
    border: 1px solid white;
    cursor: pointer;
    transition: background 0.15s ease;
    position: sticky;
    bottom: 12px;
    right: 12px;
    z-index: 999;
}

.expand-toggle:hover {
    background: #4f4f4f;
}